*//turn_degrees(speed, target_angle, brake=True, error_margin=2, sleep_time=0.01)
Use a GyroSensor to rotate in place for target_angle

speed is the desired speed of the midpoint of the robot

target_angle is the number of degrees we want to rotate

brake hit the brakes once we reach target_angle

error_margin is the +/- angle threshold to control how accurate the turn should be

sleep_time is how many seconds we sleep on each pass through
the loop. This is to give the robot a chance to react to the new motor settings. This should be something small such as 0.01 (10ms).
Rotate in place for target_degrees at speed*//

*//turn_right(speed, degrees, brake=True, error_margin=2, sleep_time=0.01)
Rotate clockwise degrees in place

turn_left(speed, degrees, brake=True, error_margin=2, sleep_time=0.01)
Rotate counter-clockwise degrees in place*//

from ev3dev2.motor import OUTPUT_A, OUTPUT_B, MoveTank, SpeedPercent
from ev3dev2.sensor.lego import GyroSensor

# Instantiate the MoveTank object
tank = MoveTank(OUTPUT_A, OUTPUT_B)

# Initialize the tank's gyro sensor
tank.gyro = GyroSensor()

# Calibrate the gyro to eliminate drift, and to initialize the current angle as 0
tank.gyro.calibrate()

# Pivot 30 degrees
tank.turn_degrees(
    speed=SpeedPercent(5),
    target_angle=30
)
